version: '2'
services:
  react-chat-front:
    container_name: react-chat-front
    build:
      context: ./React-front
      dockerfile: Dockerfile
    volumes:
      - './React-front:/app'
      - '/app/node_modules'
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
    networks:
      - backend
  chatservice:
    container_name: chatservice
    build:
      context: chat-services/target
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - kafkaserver
    links:
      - "kafkaserver:kafkaserver"
    environment:
      SERVER_PORT: "8085"
      KAFKASERVER_PORT: "9092"
      KAFKASERVER_URI: "kafkaserver"
      ZKSERVER_URI: "kafkaserver"
    networks:
      - backend
  pgsql:
    container_name: pgsql
    build: psql
    restart: always
    ports:
      - 5400:5432
    networks:
      - backend
  kafkaserver:
    container_name: kafkaserver
    image: spotify/kafka
    ports:
      - 2181:2181
      - 9092:9092
    networks:
      - backend
    # chat-service:
    #   container_name: chat-service
    #   build:
    #     context: ./chat-service
    #     dockerfile: Dockerfile
    #   volumes:
    #     - './chat-service:/app'
    #     - '/app/node_modules'
    #   ports:
    #     - 8001:8000
    #   environment:
    #     - CHOKIDAR_USEPOLLING=true

networks:
  backend: